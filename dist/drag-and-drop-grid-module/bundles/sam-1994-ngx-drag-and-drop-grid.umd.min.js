!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@angular/cdk/drag-drop"),require("@angular/cdk/overlay"),require("@angular/common")):"function"==typeof define&&define.amd?define("@sam-1994/ngx-drag-and-drop-grid",["exports","@angular/core","@angular/cdk/drag-drop","@angular/cdk/overlay","@angular/common"],t):t(((e=e||self)["sam-1994"]=e["sam-1994"]||{},e["sam-1994"]["ngx-drag-and-drop-grid"]={}),e.ng.core,e.ng.cdk["drag-drop"],e.ng.cdk.overlay,e.ng.common)}(this,function(e,t,r,n,i){"use strict";var o=function(){function e(e){this.template=e}return e.decorators=[{type:t.Directive,args:[{selector:"[samDragAndDropListData]"}]}],e.ctorParameters=function(){return[{type:t.TemplateRef}]},e}(),a=function(){function e(e){this.viewContainer=e}return e.decorators=[{type:t.Directive,args:[{selector:"[samContentOutlet]"}]}],e.ctorParameters=function(){return[{type:t.ViewContainerRef}]},e}(),s=function(){function e(e,t){var r=this;this.changeDetector=e,this.viewportRuler=t,this.columnNumber=1,this.enter=function(e,t){if(t===r.placeholder)return!0;if(t!==r.activeContainer)return!1;var n=r.placeholder.element.nativeElement,i=e.dropContainer.element.nativeElement,o=t.element.nativeElement,a=Array.from(o.parentElement.children).indexOf(r.source?n:i),s=Array.from(o.parentElement.children).indexOf(o);return r.source||(r.sourceIndex=a,r.source=e.dropContainer,n.style.width=i.clientWidth+"px",n.style.height=i.clientHeight+"px",i.parentElement.removeChild(i)),r.targetIndex=s,r.target=t,n.style.display="",o.parentElement.insertBefore(n,s>a?o.nextSibling:o),r.placeholder.enter(e,e.element.nativeElement.offsetLeft,e.element.nativeElement.offsetTop),!1},this.target=null,this.source=null}return e.__isTouchEvent=function(e){return e.type.startsWith("touch")},e.__isInsideDropListClientRect=function(e,t,r){var n=e.element.nativeElement.getBoundingClientRect(),i=n.top,o=n.bottom,a=n.left,s=n.right;return r>=i&&r<=o&&t>=a&&t<=s},e.prototype.ngAfterViewInit=function(){this.renderItems();var e=this.placeholder.element.nativeElement;e.style.display="none",e.parentElement.removeChild(e)},e.prototype.ngOnChanges=function(e){if(e.items){if(!this.contentOutlet)return;this.renderItems()}},e.prototype.renderItems=function(){var e=this;this.changeDetector.detectChanges(),this.contentOutlet.toArray().forEach(function(t,r){t.viewContainer.clear(),t.viewContainer.createEmbeddedView(e.dragAndDropListData.first.template,{$implicit:e.items[r],index:r})}),this.changeDetector.detectChanges()},e.prototype.dragMoved=function(t){var r=this,n=this.getPointerPositionOnPage(t.event);this.listGroup._items.forEach(function(t){e.__isInsideDropListClientRect(t,n.x,n.y)&&(r.activeContainer=t)})},e.prototype.drop=function(){if(this.target){var e=this.placeholder.element.nativeElement,t=e.parentElement;e.style.display="none",t.removeChild(e),t.appendChild(e),t.insertBefore(this.source.element.nativeElement,t.children[this.sourceIndex]),this.target=null,this.source=null,this.sourceIndex!==this.targetIndex&&(r.moveItemInArray(this.items,this.sourceIndex,this.targetIndex),this.renderItems())}},e.prototype.getPointerPositionOnPage=function(t){var r=e.__isTouchEvent(t)?t.touches[0]||t.changedTouches[0]:t,n=this.viewportRuler.getViewportScrollPosition();return{x:r.pageX-n.left,y:r.pageY-n.top}},e.decorators=[{type:t.Component,args:[{selector:"sam-drag-and-drop-grid",template:'<div cdkDropListGroup class="sam-drag-and-drop-grid">\r\n  <div cdkDropList #placeholder [cdkDropListEnterPredicate]="enter" (cdkDropListDropped)="drop()"\r\n       [ngStyle]="{\'max-width\': 100/columnNumber + \'%\'}">\r\n  </div>\r\n  <div cdkDropList *ngFor="let item of items" class="sam-drop-list-item"\r\n       [ngStyle]="{\'max-width\': 100/columnNumber + \'%\'}"\r\n       [cdkDropListEnterPredicate]="enter" (cdkDropListDropped)="drop()">\r\n    <div cdkDrag (cdkDragMoved)="dragMoved($event)" class="sam-drag-container">\r\n      <ng-container samContentOutlet></ng-container>\r\n    </div>\r\n  </div>\r\n</div>\r\n',styles:[".sam-drag-and-drop-grid{display:-webkit-box;display:flex;flex-wrap:wrap;-webkit-box-orient:horizontal;-webkit-box-direction:normal;flex-direction:row}.sam-drag-and-drop-grid .sam-drop-list-item{-webkit-box-flex:1;flex:1 1 100%;cursor:move}.sam-drag-and-drop-grid .sam-drop-list-item .sam-drag-container{height:100%}.cdk-drag-preview{box-sizing:border-box;border-radius:4px;box-shadow:0 5px 5px -3px rgba(0,0,0,.2),0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12)}.cdk-drag-placeholder{opacity:.3}.cdk-drag-animating{-webkit-transition:-webkit-transform 250ms cubic-bezier(0,0,.2,1);transition:transform 250ms cubic-bezier(0,0,.2,1);transition:transform 250ms cubic-bezier(0,0,.2,1),-webkit-transform 250ms cubic-bezier(0,0,.2,1)}"]}]}],e.ctorParameters=function(){return[{type:t.ChangeDetectorRef},{type:n.ViewportRuler}]},e.propDecorators={items:[{type:t.Input}],columnNumber:[{type:t.Input}],contentOutlet:[{type:t.ViewChildren,args:[a]}],dragAndDropListData:[{type:t.ContentChildren,args:[o]}],listGroup:[{type:t.ViewChild,args:[r.CdkDropListGroup,{static:!0}]}],placeholder:[{type:t.ViewChild,args:[r.CdkDropList,{static:!0}]}]},e}(),d=function(){function e(){}return e.decorators=[{type:t.NgModule,args:[{declarations:[s,a,o],imports:[i.CommonModule,r.DragDropModule],exports:[s,a,o]}]}],e}();e.SamDragAndDropGridComponent=s,e.SamDragAndDropGridModule=d,e.SamDragAndDropListContentOutletDirective=a,e.SamDragAndDropListDataDirective=o,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=sam-1994-ngx-drag-and-drop-grid.umd.min.js.map